services:
  mis-server:
    image: gigawatte/mis-server:2.2.2
    container_name: mis-server
    networks:
      - default
      - mis-net
    environment:
      - MAX_WORKERS=1
    env_file: 
      - .env
    healthcheck:
      test: curl --fail http://localhost:80/health || exit 1
      interval: 2s
      timeout: 5s
      retries: 3
      start_period: 15s
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  mis-web-ui:
    image: gigawatte/mis-web-ui:0.2.0b
    container_name: mis-web-ui
    env_file: 
      - .env
    networks:
      - default
      - mis-net
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.11.13-alpine
    container_name: mis-rabbitmq
    networks:
      - default
      - mis-net
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7.0.10-alpine
    container_name: mis-redis
    networks:
      - default
      - mis-net
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15.2-alpine
    container_name: mis-postgres
    hostname: mis-postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./postgres:/var/lib/postgresql/data
    networks:
      - default
      - mis-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:8.0.1
    restart: unless-stopped
    container_name: mis-mongodb
    env_file:
      - .env
    volumes:
      - ./mongodb:/data/db
    networks:
      - default
      - mis-net
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  default:
    internal: true
  mis-net:
    internal: false
